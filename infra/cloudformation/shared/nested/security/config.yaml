AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Config for compliance monitoring

# ==============================================================================
# Parameters
# ==============================================================================
Parameters:
  Environment:
    Type: String
    Description: Environment name

  ProjectName:
    Type: String
    Description: Project name for resource naming

# ==============================================================================
# Resources
# ==============================================================================
Resources:
  # ----------------------------------------------------------------------------
  # S3 Bucket for Config Logs
  # ----------------------------------------------------------------------------
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${Environment}-config-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 730  # 2年保管
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-config-bucket
        - Key: Environment
          Value: !Ref Environment

  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSConfigBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt ConfigBucket.Arn
          - Sid: AWSConfigBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:ListBucket
            Resource: !GetAtt ConfigBucket.Arn
          - Sid: AWSConfigBucketPutObject
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${ConfigBucket.Arn}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  # ----------------------------------------------------------------------------
  # IAM Role for Config
  # ----------------------------------------------------------------------------
  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-${Environment}-config-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/ConfigRole
      Policies:
        - PolicyName: ConfigS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:GetObject
                Resource:
                  - !GetAtt ConfigBucket.Arn
                  - !Sub ${ConfigBucket.Arn}/*
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-config-role
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # Config Recorder
  # ----------------------------------------------------------------------------
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: !Sub ${ProjectName}-${Environment}-config-recorder
      RoleArn: !GetAtt ConfigRole.Arn
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  # ----------------------------------------------------------------------------
  # Config Delivery Channel
  # ----------------------------------------------------------------------------
  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      Name: !Sub ${ProjectName}-${Environment}-config-delivery
      S3BucketName: !Ref ConfigBucket
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours

  # ----------------------------------------------------------------------------
  # Enable Config Recorder
  # ----------------------------------------------------------------------------
  # Note: ConfigRecorder must be started after creation
  # This requires a custom resource or manual action

  # ----------------------------------------------------------------------------
  # Config Rules - Security Best Practices
  # ----------------------------------------------------------------------------
  # Ensure S3 buckets have encryption enabled
  S3BucketEncryptionRule:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: s3-bucket-server-side-encryption-enabled
      Description: Checks that S3 buckets have server-side encryption enabled
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED

  # Ensure RDS instances are encrypted
  RDSEncryptionRule:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: rds-storage-encrypted
      Description: Checks that RDS instances have encryption at rest enabled
      Source:
        Owner: AWS
        SourceIdentifier: RDS_STORAGE_ENCRYPTED

  # Ensure CloudTrail is enabled
  CloudTrailEnabledRule:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: cloudtrail-enabled
      Description: Checks that CloudTrail is enabled
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED

  # Ensure IAM password policy is strong
  IAMPasswordPolicyRule:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: iam-password-policy
      Description: Checks that IAM password policy meets requirements
      Source:
        Owner: AWS
        SourceIdentifier: IAM_PASSWORD_POLICY
      InputParameters:
        RequireUppercaseCharacters: true
        RequireLowercaseCharacters: true
        RequireSymbols: true
        RequireNumbers: true
        MinimumPasswordLength: 14

# ==============================================================================
# Outputs
# ==============================================================================
Outputs:
  ConfigBucketName:
    Value: !Ref ConfigBucket
    Description: S3 Bucket for Config logs
    Export:
      Name: !Sub ${ProjectName}-${Environment}-ConfigBucket

  ConfigRecorderName:
    Value: !Ref ConfigRecorder
    Description: Config Recorder Name

  ConfigRoleArn:
    Value: !GetAtt ConfigRole.Arn
    Description: IAM Role ARN for Config

  SetupInstructions:
    Value: !Sub |
      AWS Config Setup:

      1. Start Config Recorder (manual step required):
         aws configservice start-configuration-recorder \
           --configuration-recorder-name ${ConfigRecorder}

      2. Verify Config is recording:
         aws configservice describe-configuration-recorder-status \
           --configuration-recorder-names ${ConfigRecorder}

      3. View compliance dashboard in AWS Console:
         https://console.aws.amazon.com/config/home?region=${AWS::Region}#/dashboard
    Description: Manual setup steps required after stack creation
