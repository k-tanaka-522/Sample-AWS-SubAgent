AWSTemplateFormatVersion: '2010-09-09'
Description: CloudWatch Logs for centralized log aggregation

# ==============================================================================
# Parameters
# ==============================================================================
Parameters:
  Environment:
    Type: String
    Description: Environment name

  ProjectName:
    Type: String
    Description: Project name for resource naming

# ==============================================================================
# Resources
# ==============================================================================
Resources:
  # ----------------------------------------------------------------------------
  # Log Groups for Various Services
  # ----------------------------------------------------------------------------
  VPCFlowLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vpc/${ProjectName}-${Environment}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vpc-flow-logs
        - Key: Environment
          Value: !Ref Environment

  NetworkFirewallLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/network-firewall/${ProjectName}-${Environment}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-network-firewall-logs
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # Metric Filters - Security Events
  # ----------------------------------------------------------------------------
  # Unauthorized API Calls
  UnauthorizedAPICallsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: UnauthorizedAPICalls
      LogGroupName: !Sub /aws/cloudtrail/${ProjectName}-${Environment}
      FilterPattern: '{ ($.errorCode = "*UnauthorizedOperation") || ($.errorCode = "AccessDenied*") }'
      MetricTransformations:
        - MetricName: UnauthorizedAPICallsCount
          MetricNamespace: !Sub ${ProjectName}/Security
          MetricValue: '1'
          DefaultValue: 0

  # Root Account Usage
  RootAccountUsageMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: RootAccountUsage
      LogGroupName: !Sub /aws/cloudtrail/${ProjectName}-${Environment}
      FilterPattern: '{ $.userIdentity.type = "Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != "AwsServiceEvent" }'
      MetricTransformations:
        - MetricName: RootAccountUsageCount
          MetricNamespace: !Sub ${ProjectName}/Security
          MetricValue: '1'
          DefaultValue: 0

  # IAM Policy Changes
  IAMPolicyChangesMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: IAMPolicyChanges
      LogGroupName: !Sub /aws/cloudtrail/${ProjectName}-${Environment}
      FilterPattern: '{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'
      MetricTransformations:
        - MetricName: IAMPolicyChangesCount
          MetricNamespace: !Sub ${ProjectName}/Security
          MetricValue: '1'
          DefaultValue: 0

  # Security Group Changes
  SecurityGroupChangesMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: SecurityGroupChanges
      LogGroupName: !Sub /aws/cloudtrail/${ProjectName}-${Environment}
      FilterPattern: '{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup) }'
      MetricTransformations:
        - MetricName: SecurityGroupChangesCount
          MetricNamespace: !Sub ${ProjectName}/Security
          MetricValue: '1'
          DefaultValue: 0

  # ----------------------------------------------------------------------------
  # CloudWatch Alarms for Security Events
  # ----------------------------------------------------------------------------
  # SNS Topic for Security Alarms
  SecurityAlarmsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${ProjectName}-${Environment}-security-alarms
      DisplayName: Security Alarms
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-security-alarms
        - Key: Environment
          Value: !Ref Environment

  # Unauthorized API Calls Alarm
  UnauthorizedAPICallsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-${Environment}-unauthorized-api-calls
      AlarmDescription: Alert on unauthorized API calls
      MetricName: UnauthorizedAPICallsCount
      Namespace: !Sub ${ProjectName}/Security
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SecurityAlarmsTopic

  # Root Account Usage Alarm
  RootAccountUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-${Environment}-root-account-usage
      AlarmDescription: Alert on root account usage
      MetricName: RootAccountUsageCount
      Namespace: !Sub ${ProjectName}/Security
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SecurityAlarmsTopic

  # IAM Policy Changes Alarm
  IAMPolicyChangesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-${Environment}-iam-policy-changes
      AlarmDescription: Alert on IAM policy changes
      MetricName: IAMPolicyChangesCount
      Namespace: !Sub ${ProjectName}/Security
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SecurityAlarmsTopic

  # Security Group Changes Alarm
  SecurityGroupChangesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-${Environment}-security-group-changes
      AlarmDescription: Alert on security group changes
      MetricName: SecurityGroupChangesCount
      Namespace: !Sub ${ProjectName}/Security
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SecurityAlarmsTopic

# ==============================================================================
# Outputs
# ==============================================================================
Outputs:
  VPCFlowLogsGroupName:
    Value: !Ref VPCFlowLogsGroup
    Description: CloudWatch Log Group for VPC Flow Logs
    Export:
      Name: !Sub ${ProjectName}-${Environment}-VPCFlowLogsGroup

  NetworkFirewallLogsGroupName:
    Value: !Ref NetworkFirewallLogsGroup
    Description: CloudWatch Log Group for Network Firewall Logs

  SecurityAlarmsTopicArn:
    Value: !Ref SecurityAlarmsTopic
    Description: SNS Topic ARN for Security Alarms
    Export:
      Name: !Sub ${ProjectName}-${Environment}-SecurityAlarmsTopicArn
