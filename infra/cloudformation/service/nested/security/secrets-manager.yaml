AWSTemplateFormatVersion: '2010-09-09'
Description: 'Secrets Manager - Additional Secrets (API Keys, Tokens)'

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Description: Environment name

  ProjectName:
    Type: String
    Description: Project name for resource naming

Resources:
  # ------------------------------------------------------------
  # Secret: External API Key (事業者向けAPI認証用)
  # ------------------------------------------------------------
  ExternalAPIKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ProjectName}/${Environment}/external-api-key
      Description: External API Key for Vendor Integration
      SecretString: !Sub |
        {
          "api_key": "CHANGEME_EXTERNAL_API_KEY",
          "api_secret": "CHANGEME_EXTERNAL_API_SECRET"
        }
      KmsKeyId: !ImportValue
        Fn::Sub: ${ProjectName}-${Environment}-rds-encryption-key-id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-external-api-key
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: External API Key
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # Secret: JWT Secret Key (認証トークン署名用)
  # ------------------------------------------------------------
  JWTSecretKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ProjectName}/${Environment}/jwt-secret
      Description: JWT Secret Key for Token Signing
      GenerateSecretString:
        PasswordLength: 64
        ExcludeCharacters: '"@/\'
        RequireEachIncludedType: true
      KmsKeyId: !ImportValue
        Fn::Sub: ${ProjectName}-${Environment}-rds-encryption-key-id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-jwt-secret
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: JWT Secret Key
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # Secret: Session Secret (セッション管理用)
  # ------------------------------------------------------------
  SessionSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ProjectName}/${Environment}/session-secret
      Description: Session Secret for Cookie Signing
      GenerateSecretString:
        PasswordLength: 64
        ExcludeCharacters: '"@/\'
        RequireEachIncludedType: true
      KmsKeyId: !ImportValue
        Fn::Sub: ${ProjectName}-${Environment}-rds-encryption-key-id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-session-secret
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Session Secret
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # Resource Policy: Allow ECS Task Role to Access Secrets
  # ------------------------------------------------------------
  ExternalAPIKeySecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref ExternalAPIKeySecret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-ecs-task-role-arn
            Action:
              - secretsmanager:GetSecretValue
            Resource: '*'

  JWTSecretKeyResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref JWTSecretKey
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-ecs-task-role-arn
            Action:
              - secretsmanager:GetSecretValue
            Resource: '*'

  SessionSecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref SessionSecret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-ecs-task-role-arn
            Action:
              - secretsmanager:GetSecretValue
            Resource: '*'

Outputs:
  ExternalAPIKeySecretArn:
    Description: External API Key Secret ARN
    Value: !Ref ExternalAPIKeySecret
    Export:
      Name: !Sub ${ProjectName}-${Environment}-external-api-key-secret-arn

  JWTSecretKeyArn:
    Description: JWT Secret Key ARN
    Value: !Ref JWTSecretKey
    Export:
      Name: !Sub ${ProjectName}-${Environment}-jwt-secret-arn

  SessionSecretArn:
    Description: Session Secret ARN
    Value: !Ref SessionSecret
    Export:
      Name: !Sub ${ProjectName}-${Environment}-session-secret-arn
