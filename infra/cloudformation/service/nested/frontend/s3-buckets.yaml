AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 Buckets for Staff and Vendor SPAs'

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Description: Environment name

  ProjectName:
    Type: String
    Description: Project name for resource naming

Resources:
  # ------------------------------------------------------------
  # S3 Bucket: Staff SPA (職員向けSPA)
  # ------------------------------------------------------------
  StaffSPABucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${Environment}-staff-spa
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-s3-kms-key-id
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-staff-spa
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Staff SPA Hosting
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # S3 Bucket Policy: Staff SPA (CloudFront OAC Access)
  # ------------------------------------------------------------
  StaffSPABucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaffSPABucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontOAC
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub ${StaffSPABucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/*

  # ------------------------------------------------------------
  # S3 Bucket: Vendor SPA (事業者向けSPA)
  # ------------------------------------------------------------
  VendorSPABucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${Environment}-vendor-spa
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-s3-kms-key-id
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vendor-spa
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Vendor SPA Hosting
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # S3 Bucket Policy: Vendor SPA (CloudFront OAC Access)
  # ------------------------------------------------------------
  VendorSPABucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref VendorSPABucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontOAC
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub ${VendorSPABucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/*

  # ------------------------------------------------------------
  # S3 Bucket: Reports (レポート保存用)
  # ------------------------------------------------------------
  ReportsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${Environment}-reports
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-s3-kms-key-id
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: MoveToIA
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
          - Id: DeleteOldReports
            Status: Enabled
            ExpirationInDays: 365
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-reports
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Reports Storage
        - Key: ManagedBy
          Value: CloudFormation

  # ------------------------------------------------------------
  # S3 Bucket Policy: Reports (ECS Task Role Access)
  # ------------------------------------------------------------
  ReportsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReportsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowECSTaskRole
            Effect: Allow
            Principal:
              AWS: !ImportValue
                Fn::Sub: ${ProjectName}-${Environment}-ecs-task-role-arn
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - !Sub ${ReportsBucket.Arn}
              - !Sub ${ReportsBucket.Arn}/*

Outputs:
  StaffSPABucketName:
    Description: Staff SPA S3 Bucket Name
    Value: !Ref StaffSPABucket
    Export:
      Name: !Sub ${ProjectName}-${Environment}-staff-spa-bucket-name

  StaffSPABucketArn:
    Description: Staff SPA S3 Bucket ARN
    Value: !GetAtt StaffSPABucket.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-staff-spa-bucket-arn

  VendorSPABucketName:
    Description: Vendor SPA S3 Bucket Name
    Value: !Ref VendorSPABucket
    Export:
      Name: !Sub ${ProjectName}-${Environment}-vendor-spa-bucket-name

  VendorSPABucketArn:
    Description: Vendor SPA S3 Bucket ARN
    Value: !GetAtt VendorSPABucket.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-vendor-spa-bucket-arn

  ReportsBucketName:
    Description: Reports S3 Bucket Name
    Value: !Ref ReportsBucket
    Export:
      Name: !Sub ${ProjectName}-${Environment}-reports-bucket-name

  ReportsBucketArn:
    Description: Reports S3 Bucket ARN
    Value: !GetAtt ReportsBucket.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-reports-bucket-arn
