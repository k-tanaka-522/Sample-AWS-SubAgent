AWSTemplateFormatVersion: '2010-09-09'
Description: Route Tables and Routes for Service Account VPC

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Description: Environment name

  ProjectName:
    Type: String
    Description: Project name for resource naming

  VpcId:
    Type: String
    Description: VPC ID

  InternetGatewayId:
    Type: String
    Description: Internet Gateway ID

  PublicSubnet1Id:
    Type: String
    Description: Public Subnet 1 ID

  PublicSubnet2Id:
    Type: String
    Description: Public Subnet 2 ID

  PrivateSubnet1Id:
    Type: String
    Description: Private Subnet 1 ID

  PrivateSubnet2Id:
    Type: String
    Description: Private Subnet 2 ID

  DataSubnet1Id:
    Type: String
    Description: Data Subnet 1 ID

  DataSubnet2Id:
    Type: String
    Description: Data Subnet 2 ID

  TransitGatewayId:
    Type: String
    Description: Transit Gateway ID (from Network Shared Account)
    Default: ''

Conditions:
  HasTransitGateway: !Not [!Equals [!Ref TransitGatewayId, '']]

Resources:
  # ==============================================================================
  # Public Route Table
  # ==============================================================================
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: public

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayId

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1Id
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2Id
      RouteTableId: !Ref PublicRouteTable

  # ==============================================================================
  # Private Route Table (for ECS Fargate)
  # ==============================================================================
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-private-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: private

  # Transit Gateway経由でインターネット向け通信（Egress VPC経由）
  PrivateRouteToInternet:
    Type: AWS::EC2::Route
    Condition: HasTransitGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TransitGatewayId

  # オンプレミス向け通信（Transit Gateway経由）
  PrivateRouteToOnPremise:
    Type: AWS::EC2::Route
    Condition: HasTransitGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 192.168.0.0/16
      TransitGatewayId: !Ref TransitGatewayId

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1Id
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2Id
      RouteTableId: !Ref PrivateRouteTable

  # ==============================================================================
  # Data Route Table (for RDS - completely isolated)
  # ==============================================================================
  DataRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-data-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: data

  # Data サブネットは完全閉域（インターネット・オンプレミスへのルートなし）

  DataSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataSubnet1Id
      RouteTableId: !Ref DataRouteTable

  DataSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataSubnet2Id
      RouteTableId: !Ref DataRouteTable

Outputs:
  PublicRouteTableId:
    Description: Public Route Table ID
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PublicRouteTable

  PrivateRouteTableId:
    Description: Private Route Table ID
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PrivateRouteTable

  DataRouteTableId:
    Description: Data Route Table ID
    Value: !Ref DataRouteTable
    Export:
      Name: !Sub ${ProjectName}-${Environment}-DataRouteTable
