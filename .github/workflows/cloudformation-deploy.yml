name: CloudFormation Deploy

on:
  pull_request:
    branches: [main]
    paths:
      - 'infra/cloudformation/service/**'
      - '.github/workflows/cloudformation-deploy.yml'

  push:
    branches: [main]
    paths:
      - 'infra/cloudformation/service/**'
      - '.github/workflows/cloudformation-deploy.yml'

# OIDC認証用の権限
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  # ===========================================================================
  # PR時: Change Set作成 + 差分表示（dry-run）
  # ===========================================================================
  preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Create Change Sets (All Stacks)
        id: changeset
        run: |
          cd infra/cloudformation/service

          STACKS=("01-network" "02-database" "03-compute" "04-auth" "05-storage" "06-monitoring")
          CHANGESET_NAME="pr-${{ github.event.pull_request.number }}-$(date +%Y%m%d-%H%M%S)"
          SUMMARY=""

          for stack in "${STACKS[@]}"; do
            echo "=== Creating Change Set: $stack ==="

            STACK_NAME="facilities-dev-$stack"
            TEMPLATE_FILE="stacks/$stack/stack.yaml"
            PARAMETERS_FILE="parameters/dev.json"

            # スタックの存在確認
            if aws cloudformation describe-stacks --stack-name $STACK_NAME &>/dev/null; then
              CHANGESET_TYPE="UPDATE"
            else
              CHANGESET_TYPE="CREATE"
            fi

            # テンプレートが要求するパラメーターのみ抽出
            REQUIRED_PARAMS=$(aws cloudformation get-template-summary \
              --template-body file://$TEMPLATE_FILE \
              --query 'Parameters[*].ParameterKey' \
              --output json)

            # パラメーターファイルから必要なパラメーターのみフィルタリング
            FILTERED_PARAMS=$(jq --argjson required "$REQUIRED_PARAMS" '
              [ .[] | select(.ParameterKey as $k | $required | index($k)) ]
            ' $PARAMETERS_FILE)

            echo "$FILTERED_PARAMS" > /tmp/filtered-params.json

            # デバッグ: フィルタ結果を表示
            echo "Required parameters: $REQUIRED_PARAMS"
            echo "Filtered parameters:"
            cat /tmp/filtered-params.json

            # Change Set 作成
            aws cloudformation create-change-set \
              --stack-name $STACK_NAME \
              --change-set-name $CHANGESET_NAME \
              --template-body file://$TEMPLATE_FILE \
              --parameters file:///tmp/filtered-params.json \
              --capabilities CAPABILITY_NAMED_IAM \
              --change-set-type $CHANGESET_TYPE \
              --description "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}" \
              || echo "Failed to create change set for $stack"

            # Change Set 完了待ち
            aws cloudformation wait change-set-create-complete \
              --stack-name $STACK_NAME \
              --change-set-name $CHANGESET_NAME \
              || true

            # 変更内容取得
            CHANGES=$(aws cloudformation describe-change-set \
              --stack-name $STACK_NAME \
              --change-set-name $CHANGESET_NAME \
              --query 'Changes[*].[ResourceChange.Action,ResourceChange.LogicalResourceId,ResourceChange.ResourceType]' \
              --output text)

            if [ -z "$CHANGES" ]; then
              SUMMARY="$SUMMARY\n**$stack**: ⚠️ No changes"
            else
              SUMMARY="$SUMMARY\n**$stack**: ✅ Changes detected\n\`\`\`\n$CHANGES\n\`\`\`"
            fi

            echo ""
          done

          # サマリーをファイルに保存
          echo -e "$SUMMARY" > /tmp/changeset-summary.txt

      - name: Comment PR with Change Set Summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('/tmp/changeset-summary.txt', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### CloudFormation Change Preview\n\n${summary}\n\n---\n**Change Set Name**: \`pr-${{ github.event.pull_request.number }}-*\`\n**Environment**: dev\n\n⚠️ These Change Sets are **NOT executed**. They will be executed after merge.`
            });

  # ===========================================================================
  # マージ後: Change Set実行（自動デプロイ）
  # ===========================================================================
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Deploy All Stacks
        run: |
          cd infra/cloudformation/service

          STACKS=("01-network" "02-database" "03-compute" "04-auth" "05-storage" "06-monitoring")

          for stack in "${STACKS[@]}"; do
            echo ""
            echo "===================================="
            echo "Deploying: $stack"
            echo "===================================="

            ./scripts/deploy.sh dev $stack || {
              echo "❌ Failed to deploy $stack"
              exit 1
            }
          done

          echo ""
          echo "===================================="
          echo "✅ All stacks deployed successfully"
          echo "===================================="
